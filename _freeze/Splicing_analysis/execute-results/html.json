{
  "hash": "a2b1f2f7f56ae51fc257cefc7ecf781a",
  "result": {
    "markdown": "---\ntitle: \"Analysis of splicing variants using R\"\nformat: \n  html:\n    toc: true\n    toc-depth: 4\n    code-fold: show\n    code-link: true\n    code-summary: \"Show the code\"\n    page-layout: full\n    fig-align: default\n    fig-width: 8\n    fig-height: 7\n    embed-resources: true\n    output-file: \"Splicing Analysis Test report\"\n    theme:\n      dark: superhero\n      light: superhero\ncode-line-numbers: true\nexecute: \n  echo: fenced\n  freeze: auto\nknitr:\n  opts_chunk: \n    collapse: true\neditor: visual\n---\n\n\n## Package Installations {#sec-package-installations}\n\nThis section will install a lot of libraries required for general bioinformatics analysis in R.\n\n### Create a function to install multiple packages\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-1_b5fa79f432928cc966907c44be78fe38'}\n\n````{.cell-code}\n```{{r}}\n#ipak <- function(pkg){\n#    new.pkg <- pkg[!(pkg %in% installed.packages()[, \"Package\"])]\n#    if (length(new.pkg)) \n#        install.packages(new.pkg, dependencies = TRUE)\n#    sapply(pkg, require, character.only = TRUE)\n#}\n```\n````\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-2_f20d45992531ddc34b319cbac7cae8b1'}\n\n````{.cell-code}\n```{{r}}\n#ipak(c(\"boot\", \"cluster\", \"codetools\", \"foreign\", \"KernSmooth\", \"lattice\", \"MASS\", \"Matrix\", \"\"))\n```\n````\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-3_5aa47611cf269e9fa71b80c1022aaf5a'}\n\n````{.cell-code}\n```{{r}}\n#bio_pkgs <- c(\"ggbio\",\"biomaRt\", \"EnsDb.Hsapiens.v75\", \"renvcBioPortalData\", \n#          \"GenomicRanges\", \"GenomicFeatures\", \"TxDb.Hsapiens.UCSC.hg19.knownGene\", \"Homo.sapiens\", \"AnnotationDbi\", \"edgeR\", \"DESeq2\", \"FRASER\", \"SplicingGraphs\", \"SeqGSEA\", \"SpliceWiz\")\n#BiocManager::install(bio_pkgs)\n```\n````\n:::\n\n\n------------------------------------------------------------------------\n\n## Analysis tutorial using FRASER\n\nThe idea here is to run the tutorial with the working example that is given in this \\[link\\](<https://colab.research.google.com/drive/1OKT32eNIq7Cz839jjqz-GJlvoToPYbib>). This will be then adjusted and run in a new notebook for the DMT1 analysis.\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-4_a9d3f86c41126efbb7edd43973e162dc'}\n\n````{.cell-code}\n```{{r}}\n# Add the directory where installed libs are stored\n.libPaths( c( .libPaths(), \"/home/ngadmin/development/R_libraries/\") )\n```\n````\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-5_dd69c700da1e9b0f3201148bd8ebcdd0'}\n\n````{.cell-code}\n```{{r}}\n# download required files \n#download.file(destfile=\"r-env-setup-script.R\", \n#    url=\"https://raw.githubusercontent.com/c-mertes/RNAseq-ASHG19/master/r-env-setup-script.R\")\n#source(\"r-env-setup-script.R\")\n#print(\"Setup done.\")\n```\n````\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-6_12c3165adf003c3aa13dd5a2d76766b4'}\n\n````{.cell-code}\n```{{r}}\nlibrary(OUTRIDER)\n```\n````\n\n```\n## Loading required package: BiocParallel\n## Loading required package: GenomicFeatures\n## Loading required package: BiocGenerics\n## \n## Attaching package: 'BiocGenerics'\n## The following objects are masked from 'package:stats':\n## \n##     IQR, mad, sd, var, xtabs\n## The following objects are masked from 'package:base':\n## \n##     anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n##     dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n##     grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n##     order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n##     rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n##     union, unique, unsplit, which.max, which.min\n## Loading required package: S4Vectors\n## Loading required package: stats4\n## \n## Attaching package: 'S4Vectors'\n## The following objects are masked from 'package:base':\n## \n##     expand.grid, I, unname\n## Loading required package: IRanges\n## Loading required package: GenomeInfoDb\n## Loading required package: GenomicRanges\n## Loading required package: AnnotationDbi\n## Loading required package: Biobase\n## Welcome to Bioconductor\n## \n##     Vignettes contain introductory material; view with\n##     'browseVignettes()'. To cite Bioconductor, see\n##     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n## Loading required package: SummarizedExperiment\n## Loading required package: MatrixGenerics\n## Loading required package: matrixStats\n## \n## Attaching package: 'matrixStats'\n## The following objects are masked from 'package:Biobase':\n## \n##     anyMissing, rowMedians\n## \n## Attaching package: 'MatrixGenerics'\n## The following objects are masked from 'package:matrixStats':\n## \n##     colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n##     colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n##     colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n##     colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n##     colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n##     colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n##     colWeightedMeans, colWeightedMedians, colWeightedSds,\n##     colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n##     rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n##     rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n##     rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n##     rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n##     rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n##     rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n##     rowWeightedSds, rowWeightedVars\n## The following object is masked from 'package:Biobase':\n## \n##     rowMedians\n## Loading required package: data.table\n## \n## Attaching package: 'data.table'\n## The following object is masked from 'package:SummarizedExperiment':\n## \n##     shift\n## The following object is masked from 'package:GenomicRanges':\n## \n##     shift\n## The following object is masked from 'package:IRanges':\n## \n##     shift\n## The following objects are masked from 'package:S4Vectors':\n## \n##     first, second\n```\n\n````{.cell-code}\n```{{r}}\nlibrary(annotables)\nlibrary(data.table)\nlibrary(ggplot2)\nlibrary(ggpubr)\nlibrary(shiny)\nlibrary(tictoc)\n```\n````\n\n```\n## \n## Attaching package: 'tictoc'\n## The following object is masked from 'package:data.table':\n## \n##     shift\n## The following object is masked from 'package:SummarizedExperiment':\n## \n##     shift\n## The following object is masked from 'package:GenomicRanges':\n## \n##     shift\n## The following object is masked from 'package:IRanges':\n## \n##     shift\n```\n:::\n\n\nUsing the raw read counts and a sample annnotation we can find the gene expression outliers\n\n\n::: {.cell .column-screen-inset layout-nrow=\"1\" hash='Splicing_analysis_cache/html/unnamed-chunk-7_f3675dca0ebc9b5e1f4d9f9aa347e75d'}\n\n````{.cell-code}\n```{{r}}\n#| column: screen-inset\n#| layout-nrow: 1\nanno <- fread(\"./annotation.tsv\")[, 1:6]\ncts <- as.matrix(read.table(\"./outrider/raw_counts.tsv.gz\"))\n\n#sneak peak into the data\nhead(anno)\nprint(\"Dimensions of the annotation:\")\ndim(anno)\n\ncts[1:5, 1:10]\nprint(\"Dimensions of the count table:\")\ndim(cts)\n```\n````\n\n```\n##                  RNA_ID    SEX  ORIGIN      LAB INDIVIDUAL phase1TG\n## 1: HG00096.1.M_111124_6   male British    UNIGE    HG00096        1\n## 2: HG00103.4.M_120208_3   male British     ICMB    HG00103        1\n## 3: HG00106.4.M_120208_5 female British     ICMB    HG00106        1\n## 4: HG00111.2.M_111215_4 female British CNAG_CRG    HG00111        1\n## 5: HG00116.2.M_120131_1   male British CNAG_CRG    HG00116        1\n## 6: HG00126.1.M_111124_8   male British    UNIGE    HG00126        1\n## [1] \"Dimensions of the annotation:\"\n## [1] 100   6\n##                      HG00096 HG00103 HG00106 HG00111 HG00116 HG00126 HG00132\n## ENSG00000000003.14_2       1       3       1      15       1       5       0\n## ENSG00000000005.5_2        0       0       0       0       0       0       0\n## ENSG00000000419.12_2     853    1131    1148    1341     863     948    1363\n## ENSG00000000457.13_3     413     438     510     482     385     583     547\n## ENSG00000000460.16_5     338     262     470     547     472     503     725\n##                      HG00149 HG00150 HG00176\n## ENSG00000000003.14_2       3       5       0\n## ENSG00000000005.5_2        0       0       0\n## ENSG00000000419.12_2     671    1452    1070\n## ENSG00000000457.13_3     442     504     337\n## ENSG00000000460.16_5     514     596     320\n## [1] \"Dimensions of the count table:\"\n## [1] 60829   100\n```\n:::\n\n\nCreate an Outrider object with the loaded annotation and raw count matrix\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-8_ef67484b7d2fb08d3dcfdda13ab01e6d'}\n\n````{.cell-code}\n```{{r}}\nanno[,sampleID:=INDIVIDUAL]\nods <- OutriderDataSet(countData = cts, colData = anno)\nods\n```\n````\n\n```\n## class: OutriderDataSet\n## class: RangedSummarizedExperiment \n## dim: 60829 100 \n## metadata(1): version\n## assays(1): counts\n## rownames(60829): ENSG00000000003.14_2 ENSG00000000005.5_2 ...\n##   ENSG00000285993.1_1 ENSG00000285994.1_1\n## rowData names(0):\n## colnames(100): HG00096 HG00103 ... NA20805 NA20811\n## colData names(7): RNA_ID SEX ... phase1TG sampleID\n```\n:::\n\n\n### QC and preprocessing of raw count data.\n\n#### Size Factor\n\nIt represents the sequencing depth of each sample with respect to the others and is centered around 1. we can use `estimateSizeFactors` from DESeq2 and plot it.\n\nThings to consider:\n\n1.  A low *sizeFactor* could be an indication for a failed experiment or issues with RNA preperation\n\n\n::: {.cell .column-screen-inset layout-nrow=\"1\" hash='Splicing_analysis_cache/html/unnamed-chunk-9_ba62fe2334e44fea1f16d5a1321eb7c2'}\n\n````{.cell-code}\n```{{r}}\n#| column: screen-inset\n#| layout-nrow: 1\nods <- estimateSizeFactors(ods)\nplotSizeFactors(ods)\n```\n````\n\n::: {.cell-output-display}\n![](Splicing_analysis_files/figure-html/unnamed-chunk-9-1.png){width=768}\n:::\n:::\n\n\n##### Identify the sample with lowest *sizefactor*\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-10_6b98ec0c0008d53b8f8ff643c6dc9c4b'}\n\n````{.cell-code}\n```{{r}}\nround(sort(sizeFactors(ods)), digits = 2)[1:5]\n```\n````\n\n```\n## NA20778 NA20805 NA06984 NA20540 HG00278 \n##    0.34    0.69    0.73    0.73    0.74\n```\n:::\n\n\n#### Filtering non-expressed genes\n\n-   It is done to reove genes that are not expressed or/and of low quality.\n\n-   to detect outliers removing non expressed genes gives a more robust result\n\n-   As a good starting point keep genes where at least 5% of the samples have FPKM value greater than 1 (FPKM: Fragments per kilobase of transcript per million mapped reads)\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-11_a9ab01900cd69e55325dfc25fdcc1380'}\n\n````{.cell-code}\n```{{r}}\ntxdb <- loadDb(\"annotations/gencode.v29lift37.annotation.txdb\")\nods <- filterExpression(ods, gtfFile=txdb, filterGenes=FALSE)\n```\n````\n\n```\n## 45212 genes did not pass the filter. This is 74.3% of the genes.\n```\n:::\n\n\n-   Plot the number of genes filtered out and their expression distributions across sample/gene pairs\n\n\n::: {.cell .column-screen-inset layout-nrow=\"1\" hash='Splicing_analysis_cache/html/unnamed-chunk-12_f2ec4e996db1f0272bbaa51114698248'}\n\n````{.cell-code}\n```{{r}}\n#| column: screen-inset\n#| layout-nrow: 1\nplotFPKM(ods) + theme(legend.position = 'bottom')\n```\n````\n\n```\n## 3504263 sample-gene combinations are zero. This is 57.6% of the data\n```\n\n::: {.cell-output-display}\n![](Splicing_analysis_files/figure-html/unnamed-chunk-12-1.png){width=768}\n:::\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-13_b96266582b74fbd5b35617a24c0b6959'}\n\n````{.cell-code}\n```{{r}}\n# filter object based on the expression status of the genes\nods <- ods[mcols(ods)[, \"passedFilter\"],]\nods\n```\n````\n\n```\n## class: OutriderDataSet\n## class: RangedSummarizedExperiment \n## dim: 15617 100 \n## metadata(1): version\n## assays(1): counts\n## rownames(15617): ENSG00000000419.12_2 ENSG00000000457.13_3 ...\n##   ENSG00000285976.1_1 ENSG00000285979.1_1\n## rowData names(3): loggeomeans passedFilter basepairs\n## colnames(100): HG00096 HG00103 ... NA20805 NA20811\n## colData names(13): sampleID RNA_ID ... passedFilterGenes\n##   expressedGenesRank\n```\n:::\n\n\n### Sample co-variation\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-14_7730829eb56b5523fbf5c52c6be1908a'}\n\n````{.cell-code}\n```{{r}}\noptions(repr.plot.height = 5, repr.plot.width = 6)\n\n# we will use normalize=FALSE since we have not corrected the data yet and cols from the #annotation to add labels to the heatmap\nplotCountCorHeatmap(ods, colGroups=c(\"SEX\", \"ORIGIN\"), rowGroups= \"LAB\", normalize= FALSE)\n```\n````\n\n::: {.cell-output-display}\n![](Splicing_analysis_files/figure-html/unnamed-chunk-14-1.png){width=768}\n:::\n:::\n\n\n### Model Fitting {#sec-model-fitting}\n\nUsing OUTRIDER to model sample co-variation\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-15_1a5d693d110008f1b9107c89572f3534'}\n\n````{.cell-code}\n```{{r}}\ntic()\nregister(MulticoreParam(workers = 4, tasks = 12, progressbar = TRUE))\nods <- readRDS(\"outrider/fitted_ods.RDS\")\n#ods <- findEncodingDim(ods)\ngetBestQ(ods)\ntoc()\n#ods <- OUTRIDER(ods, q=getBestQ(ods))\n```\n````\n\n```\n## [1] 18\n## 1.341 sec elapsed\n```\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-16_4640f75a1d4c4b9b895effc227915969'}\n\n````{.cell-code}\n```{{r}}\nplotEncDimSearch(ods)\n```\n````\n\n```\n## `geom_smooth()` using formula = 'y ~ x'\n```\n\n::: {.cell-output-display}\n![](Splicing_analysis_files/figure-html/unnamed-chunk-16-1.png){width=768}\n:::\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-17_4f41ee09b0b8d23f77ce7e9ccbc84af8'}\n\n````{.cell-code}\n```{{r}}\n# Check the heatmap\nplotCountCorHeatmap(ods, colGroups=c(\"SEX\", \"ORIGIN\"), rowGroups=\"LAB\", normalize=TRUE)\n```\n````\n\n::: {.cell-output-display}\n![](Splicing_analysis_files/figure-html/unnamed-chunk-17-1.png){width=768}\n:::\n:::\n\n\n### Detection of Expression outliers {#sec-detection-of-expression-outliers}\n\nOutlier: An event that significantly deviates from the expected Negative-Bionomical distribution after controlling for confounders.\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-18_eac9ae0679954f5c9da00b7ee28b96ce'}\n\n````{.cell-code}\n```{{r}}\nplotAberrantPerSample(ods)\n```\n````\n\n```\n## Warning: Transformation introduced infinite values in continuous y-axis\n## Warning: Removed 28 rows containing missing values (`geom_bar()`).\n```\n\n::: {.cell-output-display}\n![](Splicing_analysis_files/figure-html/unnamed-chunk-18-1.png){width=768}\n:::\n:::\n\n\n#### What are the genes that are outliers.\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-19_a285247687980370714fee3ab842a2bb'}\n\n````{.cell-code}\n```{{r}}\ngeneIDs <- gsub(\"\\\\.[0-9]*(_[0-9]*)?.*$\", \"\", rownames(ods))\nmap <- merge(data.table(ensgene=geneIDs), grch37, sort=FALSE, all.x=TRUE)[!duplicated(ensgene),]\n\n# Set new gene names only if hgnc symbol is present\nif(!\"ENSG\" %in% colnames(mcols(ods))){\n  mcols(ods)$ENSG <- geneIDs\n  rownames(ods) <- map[,ifelse(\n    is.na(symbol) | symbol == \"\" | duplicated(symbol), geneIDs, symbol)]\n}\n```\n````\n:::\n\n\nLets retrivve the expression outliers\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-20_67fe977cff4f4552cd644407f39b4528'}\n\n````{.cell-code}\n```{{r}}\nres <- results(ods)\nhead(res)\ndim(res)\n```\n````\n\n```\n##     geneID sampleID       pValue      padjust zScore  l2fc rawcounts normcounts\n## 1:  ZNF549  NA12341 3.777882e-21 6.037600e-16  -9.38 -4.72         4       6.39\n## 2:     CAT  NA18873 1.168161e-17 1.866890e-12  -9.17 -5.37        24      29.43\n## 3:    TXN2  HG00103 6.915780e-16 1.105241e-10  -8.39 -1.37       852    1033.16\n## 4: FAM127A  NA06984 5.025834e-15 8.032008e-10  -8.39 -2.38        65      81.68\n## 5:   PARP4  NA18916 8.031651e-15 1.062379e-09  -8.34 -2.21       833     585.46\n## 6:   BRCC3  NA18916 1.329516e-14 1.062379e-09   7.21  1.16      2689    1666.14\n##    meanCorrected  theta aberrant AberrantBySample AberrantByGene padj_rank\n## 1:        205.80  40.72     TRUE               11              1       1.0\n## 2:       1273.04  14.85     TRUE                4              1       1.0\n## 3:       2679.52 103.84     TRUE                7              1       1.0\n## 4:        433.34  46.24     TRUE               18              1       1.0\n## 5:       2704.62  41.63     TRUE                8              1       1.5\n## 6:        746.81  70.70     TRUE                8              1       1.5\n## [1] 285  14\n```\n:::\n\n\n### Finding candidates in a patient.\n\nAs per the tutorial, sample NA18873 has a rare mitochondrial disease with complex 1 deficiency. This means we need to find MT genes abberently expressed.\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-21_3ae473b63488d5dc33abb1798aaf21a9'}\n\n````{.cell-code}\n```{{r}}\nplotVolcano(ods, \"NA18873\", base=TRUE)\n```\n````\n\n::: {.cell-output-display}\n![](Splicing_analysis_files/figure-html/unnamed-chunk-21-1.png){width=768}\n:::\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-22_4ee9c798fd12c5b80a7f812a9e8b2482'}\n\n````{.cell-code}\n```{{r}}\nres[sampleID == \"NA18873\"]\n```\n````\n\n```\n##           geneID sampleID       pValue      padjust zScore  l2fc rawcounts\n## 1:           CAT  NA18873 1.168161e-17 1.866890e-12  -9.17 -5.37        24\n## 2:       TIMMDC1  NA18873 6.692550e-12 5.347830e-07  -7.27 -1.00       341\n## 3: RP11-325F22.2  NA18873 3.251872e-07 1.732320e-02  -6.60 -4.77         0\n## 4:          DCTD  NA18873 1.074458e-06 4.292848e-02  -5.09 -0.45      1283\n##    normcounts meanCorrected  theta aberrant AberrantBySample AberrantByGene\n## 1:      29.43       1273.04  14.85     TRUE                4              1\n## 2:     505.53       1013.88 158.36     TRUE                4              1\n## 3:       0.00         42.93  16.34     TRUE                4              1\n## 4:    1542.44       2108.19 333.19     TRUE                4              1\n##    padj_rank\n## 1:         1\n## 2:         2\n## 3:         3\n## 4:         4\n```\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-23_36b061884f9cfd53f8333e2793a18940'}\n\n````{.cell-code}\n```{{r}}\noptions(repr.plot.width=8, repr.plot.height=4)\n\nggarrange(ncol=2,\n    plotExpressionRank(ods, \"TIMMDC1\", norm=FALSE, basePlot=TRUE) + scale_y_log10(lim=c(300,2000)),\n    plotExpressionRank(ods, \"TIMMDC1\", norm=TRUE,  basePlot=TRUE) + scale_y_log10(lim=c(300,2000)))\n```\n````\n\n```\n## Scale for y is already present.\n## Adding another scale for y, which will replace the existing scale.\n## Scale for y is already present.\n## Adding another scale for y, which will replace the existing scale.\n```\n\n::: {.cell-output-display}\n![](Splicing_analysis_files/figure-html/unnamed-chunk-23-1.png){width=768}\n:::\n:::\n\n\n# Aberrant Splicing Detection in RNA-Seq Data.\n\nA comprehensive background on Splicing and how FRASER works is available at <https://docs.google.com/presentation/d/1a7KZ6FXwVmGqF-FMAnz0QTk07WgzRWAbFhSNrUBspIQ/edit?pli=1#slide=id.g64b01c344e_4_394>\n\nHere we will focus on loading the packages and executing the tutorial.\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-24_08cee81626d41e1fca67ac4d57bbf58f'}\n\n````{.cell-code}\n```{{r}}\nlibrary(FRASER)\n```\n````\n\n```\n## Loading required package: Rsamtools\n## Loading required package: Biostrings\n## Loading required package: XVector\n## \n## Attaching package: 'Biostrings'\n## The following object is masked from 'package:base':\n## \n##     strsplit\n## \n## Attaching package: 'FRASER'\n## The following object is masked from 'package:Biobase':\n## \n##     samples\n## The following object is masked from 'package:GenomeInfoDb':\n## \n##     mapSeqlevels\n```\n\n````{.cell-code}\n```{{r}}\nlibrary(data.table)\nlibrary(ggplot2)\nlibrary(ggpubr)\nregister(SerialParam())\n```\n````\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-25_5bc6b19ea565d38cb5874583c828cc62'}\n\n````{.cell-code}\n```{{r}}\nanno_fras <- fread(\"annotation.tsv\")[,1:6]\nanno_fras[, sampleID:=INDIVIDUAL]\njunctionCts <- fread(\"./splicing/raw_junction_counts.tsv.gz\")\nspliceSiteCts <- fread(\"./splicing/raw_site_counts.tsv.gz\")\n```\n````\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-26_208d2c6bffd5f7849b9a85bcf3efa8cd'}\n\n````{.cell-code}\n```{{r}}\nhead(anno_fras)\njunctionCts[1:6, 1:15]\nspliceSiteCts[1:6, 1:15]\n```\n````\n\n```\n##                  RNA_ID    SEX  ORIGIN      LAB INDIVIDUAL phase1TG sampleID\n## 1: HG00096.1.M_111124_6   male British    UNIGE    HG00096        1  HG00096\n## 2: HG00103.4.M_120208_3   male British     ICMB    HG00103        1  HG00103\n## 3: HG00106.4.M_120208_5 female British     ICMB    HG00106        1  HG00106\n## 4: HG00111.2.M_111215_4 female British CNAG_CRG    HG00111        1  HG00111\n## 5: HG00116.2.M_120131_1   male British CNAG_CRG    HG00116        1  HG00116\n## 6: HG00126.1.M_111124_8   male British    UNIGE    HG00126        1  HG00126\n##    seqnames start     end   width strand startID  endID HG00096 HG00103 HG00106\n## 1:     chr1 12228   12594     367      *       1 685990       0       0       0\n## 2:     chr1 12722   13224     503      *       2 685991       0       0       0\n## 3:     chr1 13053   13220     168      *       3 685992       0       0       0\n## 4:     chr1 14598 1378195 1363598      *       4 685993       0       0       0\n## 5:     chr1 14708   14708       1      *       5 685994       0       0       0\n## 6:     chr1 14738   14969     232      *       6 685995       0       0       0\n##    HG00111 HG00116 HG00126 HG00132 HG00149\n## 1:       0       0       0       0       1\n## 2:       0       0       0       0       0\n## 3:       0       0       0       0       0\n## 4:       0       0       0       0       0\n## 5:       0       0       0       0       0\n## 6:       1       0       0       0       0\n##    seqnames start   end width strand spliceSiteID     type HG00096 HG00103\n## 1:     chr1 14829 14830     2      *           12    Donor      10       7\n## 2:     chr1 14969 14970     2      *       685995 Acceptor      18      22\n## 3:     chr1 15038 15039     2      *           16    Donor       5       3\n## 4:     chr1 15795 15796     2      *       686004 Acceptor       3       3\n## 5:     chr1 17055 17056     2      *           38    Donor       1       0\n## 6:     chr1 17232 17233     2      *       686023 Acceptor       2       1\n##    HG00106 HG00111 HG00116 HG00126 HG00132 HG00149\n## 1:       9      18       4      10       0       8\n## 2:      22      41      17      19       8      17\n## 3:       7       6       1       3       0       6\n## 4:       5       4       1       1       0       0\n## 5:       1       0       0       0       0       1\n## 6:       1       0       0       1       0       0\n```\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-27_8f63f93ab9609f04f68124bb46305d3c'}\n\n````{.cell-code}\n```{{r}}\n# Create a FRASER object\n\nfds <- FraserDataSet(colData = anno_fras, junctions = junctionCts, spliceSites = spliceSiteCts)\n\nfds\n```\n````\n\n```\n## -------------------- Sample data table -----------------\n## # A tibble: 100 × 7\n##    RNA_ID               SEX    ORIGIN  LAB      INDIVIDUAL phase1TG sampleID\n##    <chr>                <chr>  <chr>   <chr>    <chr>         <int> <chr>   \n##  1 HG00096.1.M_111124_6 male   British UNIGE    HG00096           1 HG00096 \n##  2 HG00103.4.M_120208_3 male   British ICMB     HG00103           1 HG00103 \n##  3 HG00106.4.M_120208_5 female British ICMB     HG00106           1 HG00106 \n##  4 HG00111.2.M_111215_4 female British CNAG_CRG HG00111           1 HG00111 \n##  5 HG00116.2.M_120131_1 male   British CNAG_CRG HG00116           1 HG00116 \n##  6 HG00126.1.M_111124_8 male   British UNIGE    HG00126           1 HG00126 \n##  7 HG00132.2.M_111215_4 female British CNAG_CRG HG00132           0 HG00132 \n##  8 HG00149.1.M_111124_6 male   British UNIGE    HG00149           1 HG00149 \n##  9 HG00150.4.M_120208_7 female British ICMB     HG00150           1 HG00150 \n## 10 HG00176.4.M_120208_2 female Finnish ICMB     HG00176           1 HG00176 \n## # ℹ 90 more rows\n## \n## Number of samples:      100 \n## Number of junctions:    1178543 \n## Number of splice sites: 216897 \n## assays(2): rawCountsJ rawCountsSS\n## \n## ----------------------- Settings -----------------------\n## Analysis name:               Data Analysis \n## Analysis is strand specific: no \n## Working directory:           'FRASER_output' \n## \n## -------------------- BAM parameters --------------------\n## Default used with: bamMapqFilter=0\n```\n:::\n\n\nCreating a subset of data consisting 3 patients and 3 chromosomes only for splicing analysis\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-28_50be26b1ca6ef0691f2c813838675c4d'}\n\n````{.cell-code}\n```{{r}}\nset.seed(42)\npatient_ids <- c(\"NA11918\", \"NA20505\", \"HG00132\")\nfds <- fds <- fds[\n    seqnames(fds) %in% c(\"chr3\", \"chr6\", \"chr19\"),\n    unique(c(patient_ids, sample(colnames(fds))))[1:60]]\ndontWriteHDF5(fds) <- TRUE\nfds\n```\n````\n\n```\n## -------------------- Sample data table -----------------\n## # A tibble: 60 × 7\n##    RNA_ID               SEX    ORIGIN  LAB      INDIVIDUAL phase1TG sampleID\n##    <chr>                <chr>  <chr>   <chr>    <chr>         <int> <chr>   \n##  1 NA11918.1.M_111124_3 female Utah    UNIGE    NA11918           0 NA11918 \n##  2 NA20505.1.M_111124_6 female Tuscan  UNIGE    NA20505           1 NA20505 \n##  3 HG00132.2.M_111215_4 female British CNAG_CRG HG00132           0 HG00132 \n##  4 NA12413.2.M_111215_6 male   Utah    CNAG_CRG NA12413           1 NA12413 \n##  5 NA19102.1.M_111124_1 female Yoruba  UNIGE    NA19102           1 NA19102 \n##  6 HG00326.1.M_111124_7 female Finnish UNIGE    HG00326           1 HG00326 \n##  7 NA19207.4.M_120208_5 male   Yoruba  ICMB     NA19207           1 NA19207 \n##  8 HG00265.2.M_111215_4 male   British CNAG_CRG HG00265           1 HG00265 \n##  9 NA20811.1.M_111124_5 male   Tuscan  UNIGE    NA20811           1 NA20811 \n## 10 NA12341.1.M_111124_5 female Utah    UNIGE    NA12341           1 NA12341 \n## # ℹ 50 more rows\n## \n## Number of samples:      60 \n## Number of junctions:    199571 \n## Number of splice sites: 36134 \n## assays(2): rawCountsJ rawCountsSS\n## \n## ----------------------- Settings -----------------------\n## Analysis name:               Data Analysis \n## Analysis is strand specific: no \n## Working directory:           'FRASER_output' \n## \n## -------------------- BAM parameters --------------------\n## Default used with: bamMapqFilter=0\n```\n:::\n\n\n### Filtering of data.\n\n1.  Calculate the splicing metric with Percent Spliced In (PSI) and Splicing efficiency.\n2.  Create filters such as min reads required per sample or the % of the samples having x reads at the least.\n3.  At least one sample has to have \\|Δ𝜓\\|\\>0.1\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-29_283a2aacf6f719ba6b5371f5b543b9b5'}\n\n````{.cell-code}\n```{{r}}\nfds <- calculatePSIValues(fds)\n```\n````\n\n```\n## Mon Nov 27 13:14:14 2023: Calculate the PSI 5 and 3 values ...\n## Mon Nov 27 13:14:25 2023: Calculate the PSI site values ...\n## Mon Nov 27 13:14:33 2023: Calculate the delta for psi5 values ...\n## Warning: useNames = NA is deprecated. Instead, specify either useNames = TRUE\n## or useNames = FALSE.\n## Mon Nov 27 13:14:34 2023: Calculate the delta for psi3 values ...\n## Warning: useNames = NA is deprecated. Instead, specify either useNames = TRUE\n## or useNames = FALSE.\n## Mon Nov 27 13:14:34 2023: Calculate the delta for theta values ...\n## Warning: useNames = NA is deprecated. Instead, specify either useNames = TRUE\n## or useNames = FALSE.\n```\n\n````{.cell-code}\n```{{r}}\nfds <- filterExpressionAndVariability(fds, minDeltaPsi = 0.1, filter = FALSE)\n```\n````\n\n```\n## Mon Nov 27 13:14:34 2023: Filtering out introns with low read support ...\n## Warning: useNames = NA is deprecated. Instead, specify either useNames = TRUE\n## or useNames = FALSE.\n\n## Warning: useNames = NA is deprecated. Instead, specify either useNames = TRUE\n## or useNames = FALSE.\n\n## Warning: useNames = NA is deprecated. Instead, specify either useNames = TRUE\n## or useNames = FALSE.\n## Mon Nov 27 13:14:37 2023: Filtering out non-variable introns ...\n## Warning: useNames = NA is deprecated. Instead, specify either useNames = TRUE\n## or useNames = FALSE.\n\n## Warning: useNames = NA is deprecated. Instead, specify either useNames = TRUE\n## or useNames = FALSE.\n\n## Warning: useNames = NA is deprecated. Instead, specify either useNames = TRUE\n## or useNames = FALSE.\n\n## Warning: useNames = NA is deprecated. Instead, specify either useNames = TRUE\n## or useNames = FALSE.\n\n## Warning: useNames = NA is deprecated. Instead, specify either useNames = TRUE\n## or useNames = FALSE.\n\n## Warning: useNames = NA is deprecated. Instead, specify either useNames = TRUE\n## or useNames = FALSE.\n## Mon Nov 27 13:14:37 2023: Filtering done!\n```\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-30_4e0e265daad295995c67577dd16c3817'}\n\n````{.cell-code}\n```{{r}}\noptions(repr.plot.width = 5, repr.plot.height = 4)\n\nplotFilterExpression(fds, bins=100)\n```\n````\n\n```\n## Warning: Transformation introduced infinite values in continuous y-axis\n## Warning: Removed 75 rows containing missing values (`geom_bar()`).\n```\n\n````{.cell-code}\n```{{r}}\nplotFilterVariability(fds) + theme(legend.position = \"none\")\n```\n````\n\n```\n## Warning: Removed 166034 rows containing non-finite values (`stat_bin()`).\n## Warning: Transformation introduced infinite values in continuous y-axis\n## Warning: Removed 199 rows containing missing values (`geom_bar()`).\n```\n\n::: {.cell-output-display}\n![](Splicing_analysis_files/figure-html/unnamed-chunk-30-1.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](Splicing_analysis_files/figure-html/unnamed-chunk-30-2.png){width=768}\n:::\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-31_9a866956c1c1058606e40073f4d11ac0'}\n\n````{.cell-code}\n```{{r}}\nfds <- fds[mcols(fds, type= \"j\")[,\"passed\"],]\nfds\n```\n````\n\n```\n## -------------------- Sample data table -----------------\n## # A tibble: 60 × 7\n##    RNA_ID               SEX    ORIGIN  LAB      INDIVIDUAL phase1TG sampleID\n##    <chr>                <chr>  <chr>   <chr>    <chr>         <int> <chr>   \n##  1 NA11918.1.M_111124_3 female Utah    UNIGE    NA11918           0 NA11918 \n##  2 NA20505.1.M_111124_6 female Tuscan  UNIGE    NA20505           1 NA20505 \n##  3 HG00132.2.M_111215_4 female British CNAG_CRG HG00132           0 HG00132 \n##  4 NA12413.2.M_111215_6 male   Utah    CNAG_CRG NA12413           1 NA12413 \n##  5 NA19102.1.M_111124_1 female Yoruba  UNIGE    NA19102           1 NA19102 \n##  6 HG00326.1.M_111124_7 female Finnish UNIGE    HG00326           1 HG00326 \n##  7 NA19207.4.M_120208_5 male   Yoruba  ICMB     NA19207           1 NA19207 \n##  8 HG00265.2.M_111215_4 male   British CNAG_CRG HG00265           1 HG00265 \n##  9 NA20811.1.M_111124_5 male   Tuscan  UNIGE    NA20811           1 NA20811 \n## 10 NA12341.1.M_111124_5 female Utah    UNIGE    NA12341           1 NA12341 \n## # ℹ 50 more rows\n## \n## Number of samples:      60 \n## Number of junctions:    12535 \n## Number of splice sites: 23696 \n## assays(11): rawCountsJ psi5 ... rawOtherCounts_theta delta_theta\n## \n## ----------------------- Settings -----------------------\n## Analysis name:               Data Analysis \n## Analysis is strand specific: no \n## Working directory:           'FRASER_output' \n## \n## -------------------- BAM parameters --------------------\n## Default used with: bamMapqFilter=0\n```\n:::\n\n\n-   have a look into our data to see if we do have correlation structure or not. To have a better estimate, we use the logit transformed 𝜓 values to compute the correlation. We can annotate our plot with any information provided through the sample annotation.\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-32_480184e86a4b6f830dcea195e0d52a6c'}\n\n````{.cell-code}\n```{{r}}\noptions(repr.plot.height = 5, repr.plot.width = 6)\n\nplotCountCorHeatmap(fds, type= \"psi5\", logit=TRUE, sampleClustering=NA, annotation_cols=c(\"SEX\", \"LAB\", \"ORIGIN\"))\n```\n````\n\n```\n## Warning: useNames = NA is deprecated. Instead, specify either useNames = TRUE\n## or useNames = FALSE.\n\n## Warning: useNames = NA is deprecated. Instead, specify either useNames = TRUE\n## or useNames = FALSE.\n\n## Warning: useNames = NA is deprecated. Instead, specify either useNames = TRUE\n## or useNames = FALSE.\n```\n\n::: {.cell-output-display}\n![](Splicing_analysis_files/figure-html/unnamed-chunk-32-1.png){width=768}\n:::\n:::\n\n\nHere I am training the model from scratch to see if this can be performed in the server\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-33_7ac875dd6dfa05f7ed3d79d8d1349219'}\n\n````{.cell-code}\n```{{r}}\nregister(MulticoreParam(workers = 4, tasks = 20, progressbar = TRUE))\ntic(msg = \"Starting the loop\")\nfor(i in psiTypes) {\n  fds <- optimHyperParams(fds, i)\n  bestQ(fds,i)\n  plotEncDimSearch(fds, i)\n}\n```\n````\n\n```\n## Warning: useNames = NA is deprecated. Instead, specify either useNames = TRUE\n## or useNames = FALSE.\n\n## Warning: useNames = NA is deprecated. Instead, specify either useNames = TRUE\n## or useNames = FALSE.\n## dPsi filter:FALSE: 8316\tTRUE: 4219\n## Warning: useNames = NA is deprecated. Instead, specify either useNames = TRUE\n## or useNames = FALSE.\n## Exclusion matrix: TRUE: 12535\n## Mon Nov 27 13:17:49 2023: Injecting 368 outliers ...\n## Mon Nov 27 13:17:51 2023: Run hyper optimization with 13 options.\n## \n## Warning: useNames = NA is deprecated. Instead, specify either useNames = TRUE\n## or useNames = FALSE.\n\n## Warning: useNames = NA is deprecated. Instead, specify either useNames = TRUE\n## or useNames = FALSE.\n## dPsi filter:FALSE: 8359\tTRUE: 4176\n## Warning: useNames = NA is deprecated. Instead, specify either useNames = TRUE\n## or useNames = FALSE.\n## Exclusion matrix: TRUE: 12535\n## Mon Nov 27 13:18:53 2023: Injecting 346 outliers ...\n## Mon Nov 27 13:18:56 2023: Run hyper optimization with 13 options.\n## \n## Warning: useNames = NA is deprecated. Instead, specify either useNames = TRUE\n## or useNames = FALSE.\n\n## Warning: useNames = NA is deprecated. Instead, specify either useNames = TRUE\n## or useNames = FALSE.\n## dPsi filter:FALSE: 21403\tTRUE: 2293\n## Warning: useNames = NA is deprecated. Instead, specify either useNames = TRUE\n## or useNames = FALSE.\n## Exclusion matrix: TRUE: 23696\n## Mon Nov 27 13:19:56 2023: Injecting 1338 outliers ...\n## Mon Nov 27 13:20:07 2023: Run hyper optimization with 13 options.\n## \n```\n\n````{.cell-code}\n```{{r}}\ntoc(log = TRUE)\n```\n````\n\n```\n## \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |=====                                                                 |   8%\n  |                                                                            \n  |===========                                                           |  15%\n  |                                                                            \n  |================                                                      |  23%\n  |                                                                            \n  |======================                                                |  31%\n  |                                                                            \n  |===========================                                           |  38%\n  |                                                                            \n  |================================                                      |  46%\n  |                                                                            \n  |======================================                                |  54%\n  |                                                                            \n  |===========================================                           |  62%\n  |                                                                            \n  |================================================                      |  69%\n  |                                                                            \n  |======================================================                |  77%\n  |                                                                            \n  |===========================================================           |  85%\n  |                                                                            \n  |=================================================================     |  92%\n  |                                                                            \n  |======================================================================| 100%\n## \n## \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |=====                                                                 |   8%\n  |                                                                            \n  |===========                                                           |  15%\n  |                                                                            \n  |================                                                      |  23%\n  |                                                                            \n  |======================                                                |  31%\n  |                                                                            \n  |===========================                                           |  38%\n  |                                                                            \n  |================================                                      |  46%\n  |                                                                            \n  |======================================                                |  54%\n  |                                                                            \n  |===========================================                           |  62%\n  |                                                                            \n  |================================================                      |  69%\n  |                                                                            \n  |======================================================                |  77%\n  |                                                                            \n  |===========================================================           |  85%\n  |                                                                            \n  |=================================================================     |  92%\n  |                                                                            \n  |======================================================================| 100%\n## \n## \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |=====                                                                 |   8%\n  |                                                                            \n  |===========                                                           |  15%\n  |                                                                            \n  |================                                                      |  23%\n  |                                                                            \n  |======================                                                |  31%\n  |                                                                            \n  |===========================                                           |  38%\n  |                                                                            \n  |================================                                      |  46%\n  |                                                                            \n  |======================================                                |  54%\n  |                                                                            \n  |===========================================                           |  62%\n  |                                                                            \n  |================================================                      |  69%\n  |                                                                            \n  |======================================================                |  77%\n  |                                                                            \n  |===========================================================           |  85%\n  |                                                                            \n  |=================================================================     |  92%\n  |                                                                            \n  |======================================================================| 100%\n## \n## Starting the loop: 247.82 sec elapsed\n```\n\n::: {.cell-output-display}\n![](Splicing_analysis_files/figure-html/unnamed-chunk-33-1.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](Splicing_analysis_files/figure-html/unnamed-chunk-33-2.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](Splicing_analysis_files/figure-html/unnamed-chunk-33-3.png){width=768}\n:::\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-34_cc7ee6593ed2b263a60d32038eb16205'}\n\n````{.cell-code}\n```{{r}}\n#fds <- FRASER(fds) # uncommented because i have loaded fds from ./splicing/fitted_fds.RDS\nfds <- readRDS(\"splicing/fitted_fds.RDS\")\n```\n````\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-35_c709d58d6e8e8f11cd91a1d0b0836a27'}\n\n````{.cell-code}\n```{{r}}\nplotCountCorHeatmap(fds, type=\"psi5\", normalized=TRUE, logit=TRUE,\n                    topN=15000, annotation_col=c(\"SEX\", \"LAB\", \"ORIGIN\"), sampleClustering=NA)\n```\n````\n\n```\n## Warning: useNames = NA is deprecated. Instead, specify either useNames = TRUE\n## or useNames = FALSE.\n\n## Warning: useNames = NA is deprecated. Instead, specify either useNames = TRUE\n## or useNames = FALSE.\n\n## Warning: useNames = NA is deprecated. Instead, specify either useNames = TRUE\n## or useNames = FALSE.\n\n## Warning: useNames = NA is deprecated. Instead, specify either useNames = TRUE\n## or useNames = FALSE.\n```\n\n::: {.cell-output-display}\n![](Splicing_analysis_files/figure-html/unnamed-chunk-35-1.png){width=768}\n:::\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-36_23adad0e20a3b6c71b29d1b9c4b5b8bb'}\n\n````{.cell-code}\n```{{r}}\nplotAberrantPerSample(fds)\n```\n````\n\n```\n## Warning: Transformation introduced infinite values in continuous y-axis\n## \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |===============================================                       |  67%\n  |                                                                            \n  |======================================================================| 100%\n```\n\n::: {.cell-output-display}\n![](Splicing_analysis_files/figure-html/unnamed-chunk-36-1.png){width=768}\n:::\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-37_85473e976f0673671168cdccbd6763c7'}\n\n````{.cell-code}\n```{{r}}\nfds <- annotateRangesWithTxDb(fds)\n```\n````\n\n```\n## Loading required namespace: TxDb.Hsapiens.UCSC.hg19.knownGene\n## Loading required namespace: org.Hs.eg.db\n## \n##   403 genes were dropped because they have exons located on both strands\n##   of the same reference sequence or on more than one reference sequence,\n##   so cannot be represented by a single genomic range.\n##   Use 'single.strand.genes.only=FALSE' to get all the genes in a\n##   GRangesList object, or use suppressMessages() to suppress this message.\n## 'select()' returned 1:1 mapping between keys and columns\n##   403 genes were dropped because they have exons located on both strands\n##   of the same reference sequence or on more than one reference sequence,\n##   so cannot be represented by a single genomic range.\n##   Use 'single.strand.genes.only=FALSE' to get all the genes in a\n##   GRangesList object, or use suppressMessages() to suppress this message.\n## 'select()' returned 1:1 mapping between keys and columns\n```\n\n````{.cell-code}\n```{{r}}\nregister(SerialParam())\nres <- as.data.table(results(fds))\n```\n````\n\n```\n## Mon Nov 27 13:22:42 2023: Collecting results for: psi3\n## Mon Nov 27 13:22:42 2023: Process chunk: 1 for: psi3\n## Mon Nov 27 13:22:45 2023: Collecting results for: psi5\n## Mon Nov 27 13:22:45 2023: Process chunk: 1 for: psi5\n## Mon Nov 27 13:22:49 2023: Collecting results for: theta\n## Mon Nov 27 13:22:49 2023: Process chunk: 1 for: theta\n```\n\n````{.cell-code}\n```{{r}}\nres\n```\n````\n\n```\n##      seqnames     start       end width strand sampleID hgncSymbol\n##   1:    chr10   7838119   7844232  6114      *  HG00342    ATP5F1C\n##   2:    chr10   7842055   7844232  2178      *  HG00342    ATP5F1C\n##   3:    chr10   7838119   7839009   891      *  HG00342    ATP5F1C\n##   4:    chr10   7838119   7844232  6114      *  HG00342    ATP5F1C\n##   5:    chr16  11931951  11931952     2      *  NA20754     RSL1D1\n##  ---                                                              \n## 352:     chr8  22573576  22602106 28531      *  HG00282      PEBP4\n## 353:     chr8  22577198  22602106 24909      *  HG00282      PEBP4\n## 354:    chr22  36635486  36635487     2      *  NA19153      APOL2\n## 355:     chr6  31946776  31947190   415      *  NA20505       <NA>\n## 356:     chr3 132322172 132323941  1770      *  NA11994     ACAD11\n##      addHgncSymbols  type     pValue    padjust zScore psiValue deltaPsi\n##   1:                 psi3 2.5729e-25 1.9289e-19   7.19     0.75     0.75\n##   2:                 psi3 2.5729e-25 1.9289e-19  -6.11     0.24    -0.75\n##   3:                 psi5 4.3526e-25 3.2626e-19  -6.45     0.22    -0.77\n##   4:                 psi5 4.3526e-25 3.2626e-19   7.18     0.77     0.76\n##   5:                theta 2.0795e-23 3.3028e-17  -7.15     0.48    -0.52\n##  ---                                                                    \n## 352:                 psi3 2.3624e-07 2.9518e-02   4.30     0.57     0.52\n## 353:                 psi3 2.3624e-07 2.9518e-02  -3.21     0.11    -0.38\n## 354:                theta 2.4344e-07 4.8330e-02   4.65     1.00     0.75\n## 355:                 psi3 3.3290e-07 4.9914e-02  -4.31     0.31    -0.52\n## 356:   NPHP3-ACAD11  psi5 3.8200e-07 4.7723e-02  -4.97     0.55    -0.41\n##      meanCounts meanTotalCounts counts totalCounts\n##   1:      18.70          687.47   1122        1494\n##   2:     667.38          687.47    365        1494\n##   3:     623.30          642.73    324        1459\n##   4:      18.70          642.73   1122        1459\n##   5:     750.63          758.62    443         922\n##  ---                                              \n## 352:       0.45           18.50     27          47\n## 353:       8.77           18.50      5          47\n## 354:       7.97           92.23     10          10\n## 355:      21.82           24.23      8          26\n## 356:      28.62           28.80     12          22\n```\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-38_94ee111bf2137836932982dc1e28cfc8'}\n\n````{.cell-code}\n```{{r}}\nresAsGR <- makeGRangesFromDataFrame(res, keep.extra.columns = TRUE)\n\n# group results by genes/sample\nresults_by_genes <- as.data.table(resultsByGenes(resAsGR))\nresults_by_genes\n```\n````\n\n```\n##      seqnames     start       end width strand sampleID hgncSymbol\n##   1:    chr10   7838119   7844232  6114      *  HG00342    ATP5F1C\n##   2:    chr16  11931951  11931952     2      *  NA20754     RSL1D1\n##   3:     chr3 119232567 119234706  2140      *  NA11918    TIMMDC1\n##   4:     chr6  32487429  32551885 64457      *  NA20505   HLA-DRB5\n##   5:     chrX  12994147  12994148     2      *  HG00367     TMSB4X\n##  ---                                                              \n## 139:     chr9    162470    163977  1508      *  NA19116      CBWD1\n## 140:     chr7  56079563  56088765  9203      *  NA19096       PSPH\n## 141:    chr21  38569998  38572532  2535      *  HG00282       TTC3\n## 142:     chr8  22573576  22602106 28531      *  HG00282      PEBP4\n## 143:     chr3 132322172 132323941  1770      *  NA11994     ACAD11\n##      addHgncSymbols  type     pValue    padjust zScore psiValue deltaPsi\n##   1:                 psi3 2.5729e-25 1.9289e-19   7.19     0.75     0.75\n##   2:                theta 2.0795e-23 3.3028e-17  -7.15     0.48    -0.52\n##   3:                 psi5 5.6980e-23 4.2711e-17   6.94     0.97     0.91\n##   4:                 psi3 1.2268e-21 9.1974e-16   4.78     0.33     0.33\n##   5:                theta 2.2808e-20 3.6224e-14  -6.66     0.06    -0.89\n##  ---                                                                    \n## 139:                 psi5 1.8462e-07 1.2580e-02  -4.93     0.00    -0.83\n## 140:                 psi3 1.9147e-07 3.5886e-02   4.06     0.65     0.62\n## 141:                 psi3 2.1554e-07 2.9518e-02   4.07     0.61     0.52\n## 142:                 psi3 2.3624e-07 2.9518e-02   4.30     0.57     0.52\n## 143:   NPHP3-ACAD11  psi5 3.8200e-07 4.7723e-02  -4.97     0.55    -0.41\n##      meanCounts meanTotalCounts counts totalCounts  pValueGene  padjustGene\n##   1:      18.70          687.47   1122        1494 1.02916e-24 8.576333e-24\n##   2:     750.63          758.62    443         922 6.23850e-23 5.198750e-22\n##   3:       1.12          134.38     62          64 2.27920e-22 4.136748e-21\n##   4:       7.88         2339.65    324         978 1.22680e-21 6.747400e-21\n##   5:     139.43          156.47     70        1091 2.28080e-20 6.842400e-20\n##  ---                                                                       \n## 139:      46.05           48.87      0           7 1.84620e-07 4.786933e-07\n## 140:       2.55           48.07     55          84 3.82940e-07 7.977917e-07\n## 141:       0.52           14.52     20          33 4.31080e-07 1.078829e-06\n## 142:       0.45           18.50     27          47 4.72480e-07 1.078829e-06\n## 143:      28.62           28.80     12          22 3.82000e-07 7.003333e-07\n```\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-39_f1d8178bd835fbe25107cc7f955aaede'}\n\n````{.cell-code}\n```{{r}}\noptions(repr.plot.width = 4, repr.plot.height = 4)\nplotVolcano(fds, type=\"psi5\", \"NA11918\")\n```\n````\n\n::: {.cell-output-display}\n![](Splicing_analysis_files/figure-html/unnamed-chunk-39-1.png){width=768}\n:::\n:::\n\n\nIdentifying splicing events in detail\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-40_2d6a4da5c2a0fbd40ecec6d0a0629495'}\n\n````{.cell-code}\n```{{r}}\nres[sampleID == \"NA11918\"]\n```\n````\n\n```\n##     seqnames     start       end  width strand sampleID hgncSymbol\n##  1:     chr3 119232567 119234706   2140      *  NA11918    TIMMDC1\n##  2:     chr3 119232567 119236051   3485      *  NA11918    TIMMDC1\n##  3:     chr3 119232567 119236051   3485      *  NA11918    TIMMDC1\n##  4:     chr3 119234787 119236051   1265      *  NA11918    TIMMDC1\n##  5:     chr2  89278229  89327132  48904      *  NA11918       <NA>\n##  6:     chr2  89326964  89327132    169      *  NA11918       <NA>\n##  7:     chrX  70280969  70281692    724      *  NA11918      SNX12\n##  8:     chrX  70280969  70282703   1735      *  NA11918      SNX12\n##  9:     chr5  80770382  80911291 140910      *  NA11918      SSBP2\n## 10:     chr5  80809537  80911291 101755      *  NA11918      SSBP2\n## 11:     chr5  80770382  80785068  14687      *  NA11918      SSBP2\n## 12:     chr5  80770382  80911291 140910      *  NA11918      SSBP2\n## 13:     chrX  70280969  70282703   1735      *  NA11918      SNX12\n## 14:     chrX  70281818  70282703    886      *  NA11918      SNX12\n## 15:     chr2  89326963  89326964      2      *  NA11918       <NA>\n## 16:     chr2  89326906  89326907      2      *  NA11918       <NA>\n## 17:    chr14 106054732 106329407 274676      *  NA11918     ELK2AP\n## 18:    chr18  29488265  29488266      2      *  NA11918    TRAPPC8\n## 19:     chr4   2470956   2470957      2      *  NA11918       RNF4\n## 20:     chr2  89160079  89160080      2      *  NA11918       <NA>\n## 21:     chr9 124906657 124906658      2      *  NA11918     NDUFA8\n## 22:     chr4   2470957   2492063  21107      *  NA11918       RNF4\n## 23:     chr4   2470986   2492063  21078      *  NA11918       RNF4\n##     seqnames     start       end  width strand sampleID hgncSymbol\n##     addHgncSymbols  type     pValue    padjust zScore psiValue deltaPsi\n##  1:                 psi5 5.6980e-23 4.2711e-17   6.94     0.97     0.91\n##  2:                 psi5 5.6980e-23 4.2711e-17  -6.54     0.03    -0.91\n##  3:                 psi3 4.8925e-18 2.9835e-12  -6.23     0.03    -0.87\n##  4:                 psi3 4.8925e-18 2.9835e-12   6.20     0.93     0.87\n##  5:                 psi3 7.9592e-18 2.9835e-12   1.66     0.69     0.64\n##  6:                 psi3 7.9592e-18 2.9835e-12  -3.91     0.00    -0.89\n##  7:                 psi5 9.9904e-14 3.7443e-08  -5.22     0.12    -0.81\n##  8:                 psi5 9.9904e-14 3.7443e-08   4.85     0.75     0.69\n##  9:                 psi3 2.1054e-13 4.8090e-08   6.18     0.63     0.60\n## 10:                 psi3 2.1054e-13 4.8090e-08  -4.67     0.35    -0.57\n## 11:                 psi5 2.3322e-13 5.8273e-08  -4.60     0.34    -0.60\n## 12:                 psi5 2.3322e-13 5.8273e-08   6.11     0.66     0.62\n## 13:                 psi3 2.5659e-13 4.8090e-08   4.76     0.77     0.70\n## 14:                 psi3 2.5659e-13 4.8090e-08  -5.23     0.10    -0.82\n## 15:                theta 5.1064e-13 8.1102e-07   4.55     0.99     0.86\n## 16:                theta 1.3080e-11 1.0387e-05  -2.21     0.52    -0.46\n## 17:                 psi3 2.1121e-11 3.1668e-06   2.77     0.46     0.46\n## 18:                theta 6.3201e-11 3.3459e-05   5.79     1.00     0.78\n## 19:                theta 7.1026e-10 2.2561e-04  -4.04     0.56    -0.40\n## 20:                theta 1.1122e-09 2.9441e-04   4.92     0.95     0.66\n## 21:                theta 1.9430e-09 4.4086e-04   4.71     0.37     0.31\n## 22:                 psi3 9.2933e-09 1.1612e-03   3.83     0.38     0.35\n## 23:                 psi3 9.2933e-09 1.1612e-03  -3.92     0.57    -0.34\n##     addHgncSymbols  type     pValue    padjust zScore psiValue deltaPsi\n##     meanCounts meanTotalCounts counts totalCounts\n##  1:       1.12          134.38     62          64\n##  2:     132.90          134.38      2          64\n##  3:     132.90          138.18      2          67\n##  4:       1.63          138.18     62          67\n##  5:       5.67         1799.38    339         490\n##  6:    1784.42         1799.38      1         490\n##  7:      74.00           76.60      4          32\n##  8:       2.53           76.60     24          32\n##  9:       0.72           65.25     33          52\n## 10:      62.23           65.25     18          52\n## 11:      64.57           66.13     17          50\n## 12:       0.72           66.13     33          50\n## 13:       2.53           67.80     24          31\n## 14:      65.12           67.80      3          31\n## 15:      86.12         2051.67    318         320\n## 16:    2142.65         2151.30    153         297\n## 17:      48.05         5062.58     29          63\n## 18:       0.65           23.35     15          15\n## 19:      99.37          101.75     40          72\n## 20:     198.05         1403.87    543         571\n## 21:      15.03          235.75     45         123\n## 22:       2.37          114.07     32          84\n## 23:     105.72          114.07     48          84\n##     meanCounts meanTotalCounts counts totalCounts\n```\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-41_6753c0dd90e1e5166561aa3f57771eab'}\n\n````{.cell-code}\n```{{r}}\nplotExpression(fds, type=\"psi5\", result=res[sampleID == \"NA11918\" & hgncSymbol == \"TIMMDC1\"][1])\n```\n````\n\n::: {.cell-output-display}\n![](Splicing_analysis_files/figure-html/unnamed-chunk-41-1.png){width=768}\n:::\n:::\n\n\ndiagnosis, we want to make sure that our call is correct. Hence, we want to look at many metric to boost our confident into the call. Let's make a publication ready figure (except the sashimi plot\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-42_f07716bdff4b2e4519fa134c71f4c7d6'}\n\n````{.cell-code}\n```{{r}}\n# Make the plotting area t fit 4 panels\noptions(repr.plot.height = 4, repr.plot.width = 9)\n\nres2plot <- res[sampleID == \"NA11918\" & hgncSymbol == \"TIMMDC1\"][1,]\nggarrange(ncol = 2, \n          plotVolcano(fds, type= \"psi5\", \"NA11918\"),\n          plotExpression(fds, result = res2plot),\n          plotQQ(fds, result=res2plot),\n          plotExpectedVsObservedPsi(fds, result = res2plot))\n```\n````\n\n```\n## $`1`\n## \n## $`2`\n## \n## attr(,\"class\")\n## [1] \"list\"      \"ggarrange\"\n```\n\n::: {.cell-output-display}\n![](Splicing_analysis_files/figure-html/unnamed-chunk-42-1.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](Splicing_analysis_files/figure-html/unnamed-chunk-42-2.png){width=768}\n:::\n:::\n\n\n## Mono Allelic expression\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-43_1b5ccef9822c96acb661f6eeececbac6'}\n\n````{.cell-code}\n```{{r}}\n#BiocManager::install(\"GenomicScores\")\n#remotes::install_github(\"gagneurlab/tMAE\")\n```\n````\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-44_026f5e216389be02e8bdd505f9f85d23'}\n\n````{.cell-code}\n```{{r}}\nlibrary(ggplot2)\nlibrary(data.table)\nlibrary(tMAE)\n```\n````\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-45_79b30b1fd8f57c519ad02c671e1793a3'}\n\n````{.cell-code}\n```{{r}}\nallelicCountsFile <- 'https://i12g-gagneurweb.in.tum.de/public/workshops/RNAseq_ASHG19/input_data/mae/allelic_counts.tsv.gz'\nallelicCounts <- fread(allelicCountsFile)\n\n# print data\nallelicCounts[1:4,]\ndim(allelicCounts)\n```\n````\n\n```\n##    contig  position  variantID refAllele altAllele refCount altCount totalCount\n## 1:   chr1 150783825 rs10305750         C         T       30       29         59\n## 2:   chr1  42898843  rs1034268         A         G        2        2          4\n## 3:   chr1  42898843  rs1034268         A         G        1        6          7\n## 4:   chr1  19411129  rs1043905         A         G      112      116        228\n##    lowMAPQDepth lowBaseQDepth rawDepth otherBases improperPairs  MAE_ID\n## 1:            0             0       60          0             1 HG00106\n## 2:            0             0        4          0             0 HG00111\n## 3:            0             0        8          0             1 HG00106\n## 4:            0             0      233          2             3 HG00111\n## [1] 2866   14\n```\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-46_043164b724a287ce35e5576489731ef5'}\n\n````{.cell-code}\n```{{r}}\nprint('IDs in table')\nunique(allelicCounts$MAE_ID)\n```\n````\n\n```\n## [1] \"IDs in table\"\n## [1] \"HG00106\" \"HG00111\"\n```\n:::\n\n\nPlot counts of alternative vs reference allele.\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-47_252a28807007ac7cacf63593457c58a1'}\n\n````{.cell-code}\n```{{r}}\nggplot(allelicCounts, aes(refCount+1, altCount+1)) + geom_point() + geom_abline(slope = 1, intercept = 0) + scale_y_log10() +scale_x_log10() + theme_bw()\n```\n````\n\n::: {.cell-output-display}\n![](Splicing_analysis_files/figure-html/unnamed-chunk-47-1.png){width=768}\n:::\n:::\n\n\n### Run MAE test\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-48_6ff5ed9045cbbf7ed3b6940091fda643'}\n\n````{.cell-code}\n```{{r}}\nresMAE <- DESeq4MAE(allelicCounts, minCoverage = 10)\n```\n````\n\n```\n## Warning in qf(0.99, p, m - p): NaNs produced\n```\n\n````{.cell-code}\n```{{r}}\nhead(resMAE)\n```\n````\n\n```\n##    contig  position  variantID refAllele altAllele refCount altCount totalCount\n## 1:   chr1 150783825 rs10305750         C         T       30       29         59\n## 2:   chr1  19411129  rs1043905         A         G      112      116        228\n## 3:   chr1 146627405  rs1047140         C         G        3        7         10\n## 4:   chr1  31215364  rs1050663         T         C      845      755       1600\n## 5:   chr1 212113970  rs1052351         C         T        9       10         19\n## 6:   chr1 225609884  rs1056608         A         G       50       53        103\n##     MAE_ID    pvalue      padj      log2FC  altRatio\n## 1: HG00106 0.9340439 0.9999991 -0.04891044 0.4915254\n## 2: HG00111 0.9184799 0.9999991  0.05062522 0.5087719\n## 3: HG00106 0.2643247 0.9999991  1.22238983 0.7000000\n## 4: HG00111 0.7250251 0.9999991 -0.16247568 0.4718750\n## 5: HG00106 0.8501762 0.9999991  0.15200196 0.5263158\n## 6: HG00111 0.8757476 0.9999991  0.08406342 0.5145631\n```\n:::\n\n\n#### Determine the number of mono-allelic events\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-49_3c93222ecde802706d749996ca3f4902'}\n\n````{.cell-code}\n```{{r}}\n# define significance of the event to be expressed as padj < 0.05\n\nresMAE[, signif := padj < 0.05]\n\n# get number of cases\nprint('MAE significant variants')\nresMAE[signif == TRUE, .N, by = MAE_ID]\n```\n````\n\n```\n## [1] \"MAE significant variants\"\n##     MAE_ID  N\n## 1: HG00111 34\n## 2: HG00106 28\n```\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-50_64141cb929b61739b6624724bb8fae1c'}\n\n````{.cell-code}\n```{{r}}\n# Add column for significant mono-allelic expression of the alternative\nresMAE[, signif_ALT := signif == TRUE & altRatio >= 0.8]\n\n# Get number of cases\nprint('MAE for the alternative significant variants')\nresMAE[signif_ALT == TRUE, .N, by = MAE_ID]\n```\n````\n\n```\n## [1] \"MAE for the alternative significant variants\"\n##     MAE_ID N\n## 1: HG00106 9\n## 2: HG00111 4\n```\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-51_65bcd3d4898ceff90febac506fc6ee86'}\n\n````{.cell-code}\n```{{r}}\n## If your data is based on assembly \n#BiocManager::install(\"MafDb.gnomAD.r2.1.hs37d5\") #comment out after install\nlibrary(MafDb.gnomAD.r2.1.hs37d5)\n```\n````\n\n```\n## Loading required package: GenomicScores\n## \n## Attaching package: 'GenomicScores'\n## The following object is masked from 'package:FRASER':\n## \n##     name\n## The following object is masked from 'package:utils':\n## \n##     citation\n```\n\n````{.cell-code}\n```{{r}}\nmafdb <- MafDb.gnomAD.r2.1.hs37d5\n\n## If your data is based on assembly hg38\n#library(MafDb.gnomAD.r2.1.GRCh38)\n#mafdb <- MafDb.gnomAD.r2.1.GRCh38\n\n# convert results table into GRanges object\n#rng <- GRanges(seqnames = data$contig, \n#               ranges = IRanges(start = data$position, end = data$position), \n#               strand = '*')\n#resMAE$gnomadAF <- gscores(mafdb, rng)$AF\n```\n````\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-52_bde9c022be7f2d746b57b74577bf8223'}\n\n````{.cell-code}\n```{{r}}\n#Merge results with the annotation object\nresAnnot <- fread('https://i12g-gagneurweb.in.tum.de/public/workshops/RNAseq_ASHG19/input_data/mae/mae_annotated_results.tsv.gz')\n\nresAnnot[, rare := (gnomadAF <= 0.01 | is.na(gnomadAF))]\nprint('Number of rare events in total (including non significant variants)')\nresAnnot[rare == TRUE, .N]\n```\n````\n\n```\n## [1] \"Number of rare events in total (including non significant variants)\"\n## [1] 912\n```\n:::\n\n\nWhat are the rare mono-allelic events of these samples\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-53_c6537762e88046f43cb6318c517b1ad8'}\n\n````{.cell-code}\n```{{r}}\nresAnnot[signif_ALT == TRUE & rare == TRUE]\n```\n````\n\n```\n##    contig  position   variantID refAllele altAllele refCount altCount\n## 1:  chr10 120917382 rs367932369         C         T        0       33\n## 2:  chr10  97373558 rs759267778         G         A        5      193\n## 3:  chr13  48985639  rs17071686         C         A        0      101\n##    totalCount  MAE_ID       pvalue         padj   log2FC  altRatio gnomadAF\n## 1:         33 HG00106 3.770608e-04 1.092080e-02 7.487055 1.0000000       NA\n## 2:        198 HG00111 3.765173e-11 6.543034e-09 5.270525 0.9747475       NA\n## 3:        101 HG00106 1.406192e-05 6.468484e-04 9.100866 1.0000000    0.009\n##    signif signif_ALT rare\n## 1:   TRUE       TRUE TRUE\n## 2:   TRUE       TRUE TRUE\n## 3:   TRUE       TRUE TRUE\n```\n:::\n\n\nVisualization using *plotAllelicCounts*\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-54_545b40e45c8b001b8e70ee70e9393d7e'}\n\n````{.cell-code}\n```{{r}}\nsample1 <- 'HG00106'\nplotAllelicCounts(resAnnot[MAE_ID == sample1], rare_column = 'rare', title = sample1) + theme(legend.position = \"bottom\")\n```\n````\n\n```\n## Warning: Transformation introduced infinite values in continuous y-axis\n## Warning: Transformation introduced infinite values in continuous x-axis\n```\n\n::: {.cell-output-display}\n![](Splicing_analysis_files/figure-html/unnamed-chunk-54-1.png){width=768}\n:::\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-55_49ee94db8697de9e2afa49f004ca8f31'}\n\n````{.cell-code}\n```{{r}}\nsample2 <- 'HG00111'\nplotAllelicCounts(resAnnot[MAE_ID == sample2], rare_column = 'rare', title = sample2) + theme(legend.position = \"bottom\")\n```\n````\n\n```\n## Warning: Transformation introduced infinite values in continuous y-axis\n## Warning: Transformation introduced infinite values in continuous x-axis\n```\n\n::: {.cell-output-display}\n![](Splicing_analysis_files/figure-html/unnamed-chunk-55-1.png){width=768}\n:::\n:::\n\n\n## Gene Prioritization\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-56_005d3f5e47ff79b3ba56be99c04350d8'}\n\n````{.cell-code}\n```{{r}}\n# ensembleVEP requires variant_effect_predictor.pl in the PATH. For this you will likely have to manually install commandline version of https://www.ensembl.org/info/docs/tools/vep/script/vep_download.html\n# Also, the manuall install threw requirement of DBI as a perl package --> instal cpanminus using apt-get install followed by cpanm DBI\nlibrary(VariantAnnotation)\n```\n````\n\n```\n## \n## Attaching package: 'VariantAnnotation'\n## The following object is masked from 'package:base':\n## \n##     tabulate\n```\n\n````{.cell-code}\n```{{r}}\nlibrary(TVTB)\n```\n````\n\n```\n## Registered S3 method overwritten by 'GGally':\n##   method from   \n##   +.gg   ggplot2\n```\n\n````{.cell-code}\n```{{r}}\nlibrary(annotables)\nlibrary(ensemblVEP)\n```\n````\n\n```\n## variant_effect_predictor.pl or vep script not found. Ensembl VEP is not installed in your path.\n## \n## Attaching package: 'ensemblVEP'\n## The following object is masked from 'package:Biobase':\n## \n##     cache\n```\n\n````{.cell-code}\n```{{r}}\nlibrary(tidyverse)\n```\n````\n\n```\n## ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n## ✔ dplyr     1.1.3     ✔ readr     2.1.4\n## ✔ forcats   1.0.0     ✔ stringr   1.5.0\n## ✔ lubridate 1.9.3     ✔ tibble    3.2.1\n## ✔ purrr     1.0.2     ✔ tidyr     1.3.0\n## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n## ✖ lubridate::%within%() masks IRanges::%within%()\n## ✖ dplyr::between()      masks data.table::between()\n## ✖ dplyr::collapse()     masks Biostrings::collapse(), IRanges::collapse()\n## ✖ dplyr::combine()      masks Biobase::combine(), BiocGenerics::combine()\n## ✖ purrr::compact()      masks XVector::compact()\n## ✖ dplyr::count()        masks matrixStats::count()\n## ✖ dplyr::desc()         masks IRanges::desc()\n## ✖ tidyr::expand()       masks VariantAnnotation::expand(), S4Vectors::expand()\n## ✖ dplyr::filter()       masks stats::filter()\n## ✖ dplyr::first()        masks data.table::first(), S4Vectors::first()\n## ✖ stringr::fixed()      masks TVTB::fixed(), VariantAnnotation::fixed()\n## ✖ lubridate::hour()     masks data.table::hour()\n## ✖ lubridate::isoweek()  masks data.table::isoweek()\n## ✖ dplyr::lag()          masks stats::lag()\n## ✖ dplyr::last()         masks data.table::last()\n## ✖ lubridate::mday()     masks data.table::mday()\n## ✖ lubridate::minute()   masks data.table::minute()\n## ✖ lubridate::month()    masks data.table::month()\n## ✖ ggplot2::Position()   masks BiocGenerics::Position(), base::Position()\n## ✖ lubridate::quarter()  masks data.table::quarter()\n## ✖ purrr::reduce()       masks GenomicRanges::reduce(), IRanges::reduce()\n## ✖ dplyr::rename()       masks S4Vectors::rename()\n## ✖ lubridate::second()   masks data.table::second(), S4Vectors::second()\n## ✖ lubridate::second<-() masks S4Vectors::second<-()\n## ✖ dplyr::select()       masks VariantAnnotation::select(), AnnotationDbi::select()\n## ✖ dplyr::slice()        masks XVector::slice(), IRanges::slice()\n## ✖ purrr::transpose()    masks data.table::transpose()\n## ✖ lubridate::wday()     masks data.table::wday()\n## ✖ lubridate::week()     masks data.table::week()\n## ✖ lubridate::yday()     masks data.table::yday()\n## ✖ lubridate::year()     masks data.table::year()\n## ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n````{.cell-code}\n```{{r}}\nlibrary(data.table)\n```\n````\n:::\n\n\n#### CASE 1\n\nThis boy was the third child of healthy non-consanguineous French parents. Pregnancy and delivery were uneventful. Early psychomotor development was normal. However, speech development was delayed, acquiring language at the age of 4. At 11, he began to experience psychomotor regression and progressive visual loss. At current (by the time of the publication) age of 47, he has severe walking difficulties, blindness, abnormal behaviour (easily frightened, sometimes aggressive) and spontaneous speech.\n\nIn our dataset, this sample is named **NA11918**.\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-57_1b6a7caf8162d63735b9c5a3ade633f7'}\n\n````{.cell-code}\n```{{r}}\n# Download a list of candidates\nresults_link=\"https://i12g-gagneurweb.in.tum.de/public/workshops/RNAseq_ASHG19/input_data/outrider/results_pvalue.tsv.gz\"\noutrider_results_genes=fread(results_link)\n```\n````\n\n```\n## Warning in fread(results_link): Detected 14 column names but the data has 15\n## columns (i.e. invalid file). Added 1 extra default column name for the first\n## column which is guessed to be row names or an index. Use setnames() afterwards\n## if this guess is not correct, or fix the file write command that created the\n## file to create a valid file.\n```\n\n````{.cell-code}\n```{{r}}\n# Filter for the case of interest\noutrider_results_genes= outrider_results_genes %>% filter(sampleID==\"NA11918\") %>% select(geneID) %>% unlist\n\n# Take a look at what the gene list looks like\nhead(outrider_results_genes)\n# Get the number of candidate genes for that case\nprint(\"The total number of candidate genes within this case:\")\nlength(outrider_results_genes)\n```\n````\n\n```\n##                geneID1                geneID2                geneID3 \n## \"ENSG00000165288.10_2\" \"ENSG00000179715.12_4\" \"ENSG00000146021.14_4\" \n##                geneID4                geneID5                geneID6 \n##  \"ENSG00000115825.9_2\" \"ENSG00000047932.13_4\" \"ENSG00000119772.16_3\" \n## [1] \"The total number of candidate genes within this case:\"\n## [1] 29\n```\n:::\n\n\nGeneIDs here are not totally in ENSEMBL format so we will have to convert to one\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-58_b98df1f292d89b89c1a030afcbab3345'}\n\n````{.cell-code}\n```{{r}}\n# Modify gene format\noutrider_results_genes=str_extract(outrider_results_genes, \"ENSG[0-9]+\")\n\n# look at the changes\nhead(outrider_results_genes)\n```\n````\n\n```\n## [1] \"ENSG00000165288\" \"ENSG00000179715\" \"ENSG00000146021\" \"ENSG00000115825\"\n## [5] \"ENSG00000047932\" \"ENSG00000119772\"\n```\n:::\n\n\nTo make it human readable gene names. we will use annotable package and filter them\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-59_6a0b2ec7cfb7ad8cec644d5ccbaf5a03'}\n\n````{.cell-code}\n```{{r}}\ncandidate_genes=grch37 %>% filter(ensgene %in% outrider_results_genes)\n\n# look at the results\nhead(candidate_genes)\n```\n````\n\n```\n## # A tibble: 6 × 9\n##   ensgene         entrez symbol chr      start    end strand biotype description\n##   <chr>            <int> <chr>  <chr>    <int>  <int>  <int> <chr>   <chr>      \n## 1 ENSG00000047932  57120 GOPC   6       1.18e8 1.18e8     -1 protei… golgi-asso…\n## 2 ENSG00000060558   2769 GNA15  19      3.14e6 3.16e6      1 protei… guanine nu…\n## 3 ENSG00000068305   4205 MEF2A  15      1.00e8 1.00e8      1 protei… myocyte en…\n## 4 ENSG00000074706  26034 IPCEF1 6       1.54e8 1.55e8     -1 protei… interactio…\n## 5 ENSG00000090674  57192 MCOLN1 19      7.59e6 7.60e6      1 protei… mucolipin 1\n## 6 ENSG00000091490  23231 SEL1L3 4       2.57e7 2.59e7     -1 protei… sel-1 supp…\n```\n:::\n\n\nWe now have the list of candidate genes and more information on what they are. We are ready to filter this list to keep only the genes that are linked to the symptoms of the case of interest.\n\nIn our case, the symptoms are:\n\n-   Developmental regression ([HP:0002376](https://hpo.jax.org/app/browse/term/HP:0002376))\n\n-   Ataxia([HP:0001251](https://hpo.jax.org/app/browse/term/HP:0001251))\n\n-   Ophthalmoplegia ([HP:0000602](https://hpo.jax.org/app/browse/term/HP:0000602))\n\n-   Visual impairment ([HP:0000505](https://hpo.jax.org/app/browse/term/HP:0000505))\n\nAs you can see, there is an ID beside each symptom. Those are HPO term IDs, as found in the Human Phenotype Ontology [database](https://hpo.jax.org/app/).\n\n### Annotate candidate genes with HPO terms\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-60_400e29fbbac65d5713cde40a62fcfab6'}\n\n````{.cell-code}\n```{{r}}\nsample_HPO= c(\"HP:0002376\",\"HP:0001251\", \"HP:0000602\",\"HP:0000505\")\n\nsample_HPO\n```\n````\n\n```\n## [1] \"HP:0002376\" \"HP:0001251\" \"HP:0000602\" \"HP:0000505\"\n```\n:::\n\n\n#### Load gene to HPO ID file from HPO database\n\nThe Human Phenotype Ontology gives access to a very useful file, showing the link between symptoms and genes. This file is updated regularly so we recommend to **download the latest version** whenever possible.\n\nYou can download this file [here](https://hpo.jax.org/app/data/annotations \"Link for downloading Genes to phenotype and other classifications of HPOA\").\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-61_db8a18924aa07141285bbaad7c4d1a68'}\n\n````{.cell-code}\n```{{r}}\n# Get the file URL https://hpo.jax.org/app/data/annotations. The file has to be manually downloaded\n\n\n# Read the file\ngene_hpo <-fread(\"./phenotype_to_genes.txt\", skip=1)\n\n# Select only the columns of interest (Gene and HPO term)\ngene_hpo <- gene_hpo[, c(4, 1)]\ncolnames(gene_hpo) <- c(\"Gene\", \"Term\")\n\n# Look at the results\nhead(gene_hpo)\n```\n````\n\n```\n##        Gene       Term\n## 1:    XYLT1 HP:0025115\n## 2:    XYLT2 HP:0025115\n## 3:    ABCC6 HP:0025115\n## 4:  ALOX12B HP:0025114\n## 5:   ALOXE3 HP:0025114\n## 6: LORICRIN HP:0025114\n```\n:::\n\n\n#### Get a subset of genes that could match the syptoms\n\nNow that we have downloaded that file, we want to keep only the genes that are phenotypically relevant to the case.\n\n1.  Filter for HPO terms corresponding to the case\n\n2.  Obtain the Ensembl IDs for the genes that are associated to those HPO terms\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-62_35375dee7cf5d5ef71c546e5731f0261'}\n\n````{.cell-code}\n```{{r}}\ngenes_hpo_case=gene_hpo %>% \n  filter(Term %in% sample_HPO) %>%\n  left_join(grch37, by=c(\"Gene\"=\"symbol\"))\n```\n````\n\n```\n## Warning in left_join(., grch37, by = c(Gene = \"symbol\")): Detected an unexpected many-to-many relationship between `x` and `y`.\n## ℹ Row 2 of `x` matches multiple rows in `y`.\n## ℹ Row 22806 of `y` matches multiple rows in `x`.\n## ℹ If a many-to-many relationship is expected, set `relationship =\n##   \"many-to-many\"` to silence this warning.\n```\n\n````{.cell-code}\n```{{r}}\ngenes_hpo_case = genes_hpo_case %>% select(ensgene) %>% unique %>% unlist\n\nhead(genes_hpo_case)\nlength(genes_hpo_case)\n```\n````\n\n```\n##          ensgene1          ensgene2          ensgene3          ensgene4 \n## \"ENSG00000134242\" \"ENSG00000206450\" \"ENSG00000223532\" \"ENSG00000224608\" \n##          ensgene5          ensgene6 \n## \"ENSG00000228964\" \"ENSG00000232126\" \n## [1] 1967\n```\n:::\n\n\n#### Subset the list of genes to outlier candidates\n\nHere the assumption is that if there is an expression perturbation on the causal gene, this gene is somehow linked to some of the symptoms of the patient.\\\nSo we want to **filter** the list of genes somehow linked to the patients symptoms (listed in `genes_hpo_case`) for the one obtained as candidates in previous work.\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-63_86007694e69497a93ab97b56bc300d81'}\n\n````{.cell-code}\n```{{r}}\n# Filter outlier genes for genes linked to the phenotype.\ncandidate_genes.hpo=candidate_genes %>% filter(ensgene %in% genes_hpo_case)\n\n# Get the number of genes left\ncat(\"The number of outlier genes left after filtering associated with the disease:\")\nlength(candidate_genes.hpo$ensgene)\n\n# Take a look at the results\ncandidate_genes.hpo\n```\n````\n\n```\n## The number of outlier genes left after filtering associated with the disease:[1] 5\n## # A tibble: 5 × 9\n##   ensgene         entrez symbol chr      start    end strand biotype description\n##   <chr>            <int> <chr>  <chr>    <int>  <int>  <int> <chr>   <chr>      \n## 1 ENSG00000090674  57192 MCOLN1 19      7.59e6 7.60e6      1 protei… mucolipin 1\n## 2 ENSG00000119772   1788 DNMT3A 2       2.55e7 2.56e7     -1 protei… DNA (cytos…\n## 3 ENSG00000136717    274 BIN1   2       1.28e8 1.28e8     -1 protei… bridging i…\n## 4 ENSG00000151474  55691 FRMD4A 10      1.37e7 1.45e7     -1 protei… FERM domai…\n## 5 ENSG00000170004   1107 CHD3   17      7.79e6 7.82e6      1 protei… chromodoma…\n```\n:::\n\n\n### Annotate with variant information\n\nWe can go further and annotate our candidate with the variant information for the case.\n\nTo do so, we need to transform the candidate gene list into the right format so that we can use the genes when reading in the [VCF](https://www.internationalgenome.org/wiki/Analysis/Variant%20Call%20Format/vcf-variant-call-format-version-40/) file in R.\n\n#### Build a GRanges object with the genes obtain in previous steps\n\nWe use R packages that have been developped to handle and filter VCF files. Here, we want to upload only the part of the VCF file that is in regions of interest (i.e., our candidate genes). We can do this by giving as an input an object of type [GRanges](https://web.mit.edu/~r/current/arch/i386_linux26/lib/R/library/GenomicRanges/html/GRanges-class.html).\n\nThe next steps are transforming our list of candidate genes to the right format so that we can proceed with the analysis.\n\n1.  Change the start and end position to include potential regulatory regions (+/- 1kb here). Note that you can customize this distance or use the gene coordinates.\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-64_3b9eacdc33f5f6c395e0ff6800c5bdb4'}\n\n````{.cell-code}\n```{{r}}\n# Extending the start/end coordinates to 1kb around the gene of interest \ncandidate_genes=candidate_genes.hpo %>% \n        mutate(new_start=pmin(start,end)-1e3, new_end=pmax(start,end)+1e3)\n\n# Take a look at the results\nhead(candidate_genes)\n```\n````\n\n```\n## # A tibble: 5 × 11\n##   ensgene entrez symbol chr    start    end strand biotype description new_start\n##   <chr>    <int> <chr>  <chr>  <int>  <int>  <int> <chr>   <chr>           <dbl>\n## 1 ENSG00…  57192 MCOLN1 19    7.59e6 7.60e6      1 protei… mucolipin 1   7586512\n## 2 ENSG00…   1788 DNMT3A 2     2.55e7 2.56e7     -1 protei… DNA (cytos…  25454845\n## 3 ENSG00…    274 BIN1   2     1.28e8 1.28e8     -1 protei… bridging i… 127804603\n## 4 ENSG00…  55691 FRMD4A 10    1.37e7 1.45e7     -1 protei… FERM domai…  13684706\n## 5 ENSG00…   1107 CHD3   17    7.79e6 7.82e6      1 protei… chromodoma…   7787124\n## # ℹ 1 more variable: new_end <dbl>\n```\n:::\n\n\n2.  Transform data frame into GRanges object\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-65_638a3c79dedcd8998d5a63e76c9922be'}\n\n````{.cell-code}\n```{{r}}\n# Create a GRanges Object\ncandidate_genes.gr=makeGRangesFromDataFrame(\n        candidate_genes, ignore.strand=TRUE,\n        start.field=\"new_start\",end.field=\"new_end\")\n\n# Add gene names to GRanges object\nnames(candidate_genes.gr)=candidate_genes$ensgene\n\ncandidate_genes.gr\n```\n````\n\n```\n## GRanges object with 5 ranges and 0 metadata columns:\n##                   seqnames              ranges strand\n##                      <Rle>           <IRanges>  <Rle>\n##   ENSG00000090674       19     7586512-7599895      *\n##   ENSG00000119772        2   25454845-25566459      *\n##   ENSG00000136717        2 127804603-127865931      *\n##   ENSG00000151474       10   13684706-14505141      *\n##   ENSG00000170004       17     7787124-7817078      *\n##   -------\n##   seqinfo: 4 sequences from an unspecified genome; no seqlengths\n```\n:::\n\n\n#### Load a VCF file\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-66_fe39e729a84457c0f50155a033e5518a'}\n\n````{.cell-code}\n```{{r}}\nvcfFile <- \"./variants/1000G_subset_exome.vep.vcf.gz\"\n# index the VCF file\nindexVcf(vcfFile)\n\n# Create a reference\nvcfFile <- TabixFile(vcfFile)\n\nvcfFile\n```\n````\n\n```\n## class: VcfFile \n## path: ./variants/1000G_subset_exome.vep.vcf.gz\n## index: ./variants/1000G_subset_exome.vep.vcf.gz.tbi\n## isOpen: FALSE \n## yieldSize: NA \n## class: TabixFile \n## path: ./variants/1000G_subset_exome.vep.vcf.gz\n## index: ./variants/1000G_subset_exome.vep.vcf.gz.tbi\n## isOpen: FALSE \n## yieldSize: NA\n```\n:::\n\n\n#### Read in the VCF file for the sample of interest\n\nFor demo purposes we can look at sample of interest and the overlapping genes of interest that consists or may consist the variants\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-67_3d7cb5cee951521d28e84688806c497c'}\n\n````{.cell-code}\n```{{r}}\nparams = ScanVcfParam(samples = \"NA11918\", which = candidate_genes.gr)\n\n# read the vcf file filter the data using the parameter file created above.\nvcf_rng <- readVcf(vcfFile, \"hg19\", params)\n```\n````\n\n```\n## Warning in .bcfHeaderAsSimpleList(header): duplicate keys in header will be\n## forced to unique rownames\n```\n\n````{.cell-code}\n```{{r}}\nhead(rowRanges(vcf_rng),3)\n```\n````\n\n```\n## GRanges object with 3 ranges and 5 metadata columns:\n##               seqnames    ranges strand |    paramRangeID            REF\n##                  <Rle> <IRanges>  <Rle> |        <factor> <DNAStringSet>\n##    rs61758432        2  25457190      * | ENSG00000119772              G\n##   rs377534934        2  25458709      * | ENSG00000119772              G\n##   rs143620117        2  25459792      * | ENSG00000119772              C\n##                              ALT      QUAL      FILTER\n##               <DNAStringSetList> <numeric> <character>\n##    rs61758432                  A       100        PASS\n##   rs377534934                  A       100        PASS\n##   rs143620117                  T       100        PASS\n##   -------\n##   seqinfo: 86 sequences from hg19 genome\n```\n:::\n\n\n#### Filter for heterozygous or homozygous Alt and genes of interest\n\nIn genomics and sequencing, the term \"ALT\" typically refers to alternate contigs or alternate haplotypes. A contig is a contiguous sequence of DNA that has been assembled from fragments of sequenced DNA. Alternate contigs represent different versions of a particular region of the genome that may exist in a population or individual. Haplotypes are sets of alleles, or alternative forms of a gene, that are inherited together on a single chromosome. Alternate haplotypes represent different combinations of alleles that may exist in a population or individual.\n\n-   **ALT haplotypes in population genetics:** In population genetics, ALT haplotypes are used to study the genetic diversity of a population. By comparing the haplotypes of different individuals, researchers can identify common and rare variants and track the spread of mutations through a population.\n\n-   **ALT alleles in clinical genetics:** In clinical genetics, ALT alleles are used to identify individuals who may be at risk of genetic disorders. For example, some genetic disorders are caused by the presence of a particular combination of ALT alleles.\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-68_5db6a8d7629ae9dd99072df7fd5c3ec5'}\n\n````{.cell-code}\n```{{r}}\ncandidate_genes\n\n# Create a filter on variants hetero or homozyg alt\nHetfilt <- FilterRules(list(HetorHomAlt = \n        function(x) geno(x)$GT %in% c(\"0|1\", \"1|1\", \"1|0\")))\n\n# create a filter to keep only candidate gene annotations\nGeneFilt <- VcfVepRules(exprs = list(Cand_genes = \n        bquote(SYMBOL %in% .(candidate_genes$symbol) )))\n# Combine filters\ncombinedPreFilters <- VcfFilterRules(Hetfilt, GeneFilt)\n\n# apply them on the vcf\nvcf_het_cand <- subsetByFilter(vcf_rng, combinedPreFilters)\n\nrowRanges(vcf_het_cand)\n```\n````\n\n```\n## # A tibble: 5 × 11\n##   ensgene entrez symbol chr    start    end strand biotype description new_start\n##   <chr>    <int> <chr>  <chr>  <int>  <int>  <int> <chr>   <chr>           <dbl>\n## 1 ENSG00…  57192 MCOLN1 19    7.59e6 7.60e6      1 protei… mucolipin 1   7586512\n## 2 ENSG00…   1788 DNMT3A 2     2.55e7 2.56e7     -1 protei… DNA (cytos…  25454845\n## 3 ENSG00…    274 BIN1   2     1.28e8 1.28e8     -1 protei… bridging i… 127804603\n## 4 ENSG00…  55691 FRMD4A 10    1.37e7 1.45e7     -1 protei… FERM domai…  13684706\n## 5 ENSG00…   1107 CHD3   17    7.79e6 7.82e6      1 protei… chromodoma…   7787124\n## # ℹ 1 more variable: new_end <dbl>\n## GRanges object with 3 ranges and 5 metadata columns:\n##                  seqnames    ranges strand |    paramRangeID            REF\n##                     <Rle> <IRanges>  <Rle> |        <factor> <DNAStringSet>\n##      rs184117677       10  14050013      * | ENSG00000151474              T\n##      rs768736321       19   7592731      * | ENSG00000090674              A\n##   19:7593098_C/T       19   7593098      * | ENSG00000090674              C\n##                                 ALT      QUAL      FILTER\n##                  <DNAStringSetList> <numeric> <character>\n##      rs184117677                  C       100        PASS\n##      rs768736321                  C       255        PASS\n##   19:7593098_C/T                  T       255        PASS\n##   -------\n##   seqinfo: 86 sequences from hg19 genome\n```\n:::\n\n\n#### Consequence field extraction\n\nIn order to see potential features we can filter on lets grab the consequence field of the VCF.\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-69_fd043cb860587177f7040c994cc008ea'}\n\n````{.cell-code}\n```{{r}}\n# Parse the consequence field of the VCF\ncsq <- parseCSQToGRanges(x=vcf_het_cand, VCFRowID = rownames(vcf_het_cand))\ncsq[, c(\"Consequence\", \"SYMBOL\", \"BIOTYPE\", \"gnomAD_AF\", \"CADD_PHRED\")]\n```\n````\n\n```\n## GRanges object with 28 ranges and 5 metadata columns:\n##                  seqnames    ranges strand |            Consequence\n##                     <Rle> <IRanges>  <Rle> |            <character>\n##      rs184117677       10  14050013      * |         intron_variant\n##      rs184117677       10  14050013      * |         intron_variant\n##      rs184117677       10  14050013      * |         intron_variant\n##      rs184117677       10  14050013      * | downstream_gene_vari..\n##      rs184117677       10  14050013      * |         intron_variant\n##              ...      ...       ...    ... .                    ...\n##   19:7593098_C/T       19   7593098      * | downstream_gene_vari..\n##   19:7593098_C/T       19   7593098      * | downstream_gene_vari..\n##   19:7593098_C/T       19   7593098      * |  upstream_gene_variant\n##   19:7593098_C/T       19   7593098      * | downstream_gene_vari..\n##   19:7593098_C/T       19   7593098      * |            stop_gained\n##                         SYMBOL         BIOTYPE   gnomAD_AF  CADD_PHRED\n##                    <character>     <character> <character> <character>\n##      rs184117677        FRMD4A  protein_coding        <NA>       4.671\n##      rs184117677        FRMD4A  protein_coding        <NA>       4.671\n##      rs184117677        FRMD4A  protein_coding        <NA>       4.671\n##      rs184117677 RP11-142M10.2       antisense        <NA>       4.671\n##      rs184117677        FRMD4A  protein_coding        <NA>       4.671\n##              ...           ...             ...         ...         ...\n##   19:7593098_C/T        MCOLN1 retained_intron        <NA>        29.6\n##   19:7593098_C/T        MCOLN1 retained_intron        <NA>        29.6\n##   19:7593098_C/T        MCOLN1  protein_coding        <NA>        29.6\n##   19:7593098_C/T        MCOLN1  protein_coding        <NA>        29.6\n##   19:7593098_C/T        MCOLN1  protein_coding        <NA>        29.6\n##   -------\n##   seqinfo: 86 sequences from hg19 genome\n```\n:::\n\n\n#### Define a set of filters\n\nYou can custom create a set of filters that you want to apply on your data. These can be Transcription Start Site (TSS), allele frequency, CADD score, Variant Effect Prediction consequences and so forth.\n\n``` html\n<span style=\"color:red\"> \nAlex What sort of filters would be ideal for NewGenia's Pipeline? \n</span>\n```\n\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-70_6d45dce961d7c23b80315607e584cdc5'}\n\n````{.cell-code}\n```{{r}}\n# Filter on distance to the gene\nvepDistFilter <- VcfVepRules(exprs=list(Distance=expression(DISTANCE <= 1000)))\n\n# Filter on allele frequency\n# Here we allow NAs because some variants are uniq to the individual and hence\n# not listed in any public database (eg. gnomAD)\nvepMAFFilter<- VcfVepRules(exprs = list(MAF = \n        expression(as.numeric(gnomAD_AF) <= 0.01 || gnomAD_AF == \"NA\")))\n\n# Filter on CADD score\nvepCADDFilter <- VcfVepRules(exprs = list(CADD=expression(CADD_PHRED >= 20)))\n\n# Filter on consequences\nhighImpactVariant<-VcfVepRules(exprs=list(BigImpact=\n        expression(grepl(x=Consequence, pattern=paste(collapse=\"|\", c(\n                \"splice_acceptor_variant\", \"splice_donor_variant\", \n                \"stop_gained\", \"stop_lost\",\"frameshift_variant\"))))))\n\nregulatoryVariant<-VcfVepRules(exprs=list(RegVar=\n        expression(grepl(x=Consequence, pattern=paste(collapse=\"|\", c(\n                \"5_prime_UTR_variant\", \"3_prime_UTR_variant\", \"intron_variant\",\n                \"NMD_transcript_variant\", \"upstream_gene_variant\", \n                \"downstream_gene_variant\"))))))\n\ncombinedFilters <- VcfFilterRules(\n  vepDistFilter,\n  vepMAFFilter,\n  vepCADDFilter, \n  highImpactVariant,\n  regulatoryVariant)\n```\n````\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-71_9b623f3419112794a48780ab55b0d3a6'}\n\n````{.cell-code}\n```{{r}}\nactive(combinedFilters)\n```\n````\n\n```\n##  Distance       MAF      CADD BigImpact    RegVar \n##      TRUE      TRUE      TRUE      TRUE      TRUE\n```\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-72_02a2f363a7be706eb20c59922666cb92'}\n\n````{.cell-code}\n```{{r}}\nactive(combinedFilters)[\"BigImpact\"] <- FALSE\nactive(combinedFilters)[\"RegVar\"] <- FALSE\nactive(combinedFilters)[\"Distance\"] <- FALSE\nactive(combinedFilters)[\"CADD\"] <- FALSE\n\nactive(combinedFilters)[\"MAF\"] <- TRUE\n\nactive(combinedFilters)\n```\n````\n\n```\n##  Distance       MAF      CADD BigImpact    RegVar \n##     FALSE      TRUE     FALSE     FALSE     FALSE\n```\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-73_9879c7a6e9f5ebb25fabbb00c2b3a508'}\n\n````{.cell-code}\n```{{r}}\n# subset VCF with active filters\nvcf_filt <- subsetByFilter(vcf_het_cand, combinedFilters)\n\ncsq_filt <- ensemblVEP::parseCSQToGRanges(x = vcf_filt)\n\nunique(csq_filt[,c(\"Consequence\", \"SYMBOL\", \"BIOTYPE\", \"gnomAD_AF\",\"CADD_PHRED\")])\n```\n````\n\n```\n## GRanges object with 0 ranges and 5 metadata columns:\n##    seqnames    ranges strand | Consequence      SYMBOL     BIOTYPE   gnomAD_AF\n##       <Rle> <IRanges>  <Rle> | <character> <character> <character> <character>\n##     CADD_PHRED\n##    <character>\n##   -------\n##   seqinfo: 86 sequences from hg19 genome\n```\n:::\n\n::: {.cell hash='Splicing_analysis_cache/html/unnamed-chunk-74_322b0eeede46e7294e84fe662eee7f40'}\n\n````{.cell-code}\n```{{r}}\n# Look at number of variants left for each set of filters\nsummary(evalSeparately(expr=combinedFilters, envir=vcf_het_cand))\n```\n````\n\n```\n## <initial>  Distance       MAF      CADD BigImpact    RegVar   <final> \n##         3         3         0         3         3         3         0\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}